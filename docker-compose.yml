version: "3.9"

services:
  db:
    image: postgres:latest
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - default
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
        context: ./backend
        dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - default
    environment:
        DEBUG: ${DEBUG}

        BACKEND_TTILE: ${BACKEND_TTILE}
        BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
        BACKEND_PREFIX: ${BACKEND_PREFIX}

        BACKEND_HOST: ${BACKEND_HOST}
        BACKEND_PORT: ${BACKEND_PORT}
        BACKEND_RELOAD: ${BACKEND_RELOAD}

        BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}
        BACKEND_JWT_ALGORITHM: ${BACKEND_JWT_ALGORITHM}
        BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES}

        GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
        
        POSTGRES_URL: ${POSTGRES_URL}

  frontend:
    build:
        context: ./frontend
        dockerfile: Dockerfile
        args:
          REACT_APP_API_URL: ${REACT_APP_API_URL}
          REACT_APP_GOOGLE_CLIENT_ID: ${REACT_APP_GOOGLE_CLIENT_ID}
    ports:
      - "80:80"
    networks:
      - default
    environment:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_GOOGLE_CLIENT_ID: ${REACT_APP_GOOGLE_CLIENT_ID}

volumes:
  app-db-data:
